<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "sale".
 *
 * @property integer $id
 * @property string $date
 * @property integer $qautity
 * @property string $price
 * @property string $profit_price
 * @property integer $products_id
 * @property integer $user_id
 * @property integer $invoice_id
 * @property integer $branch_id
 *
 * @property \app\models\Branch $branch
 * @property \app\models\Invoice $invoice
 * @property \app\models\Products $products
 * @property \app\models\User $user
 * @property \app\models\SaleHasPurchase[] $saleHasPurchases
 * @property \app\models\PurchaseItem[] $purchaseItems
 * @property string $aliasModel
 */
abstract class Sale extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'sale';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['date', 'qautity', 'price', 'products_id', 'user_id', 'invoice_id'], 'required'],
            [['date'], 'safe'],
            [['qautity', 'products_id', 'user_id', 'invoice_id', 'branch_id'], 'integer'],
            [['price', 'profit_price'], 'string', 'max' => 11],
            [['branch_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Branch::className(), 'targetAttribute' => ['branch_id' => 'id']],
            [['invoice_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Invoice::className(), 'targetAttribute' => ['invoice_id' => 'id']],
            [['products_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Products::className(), 'targetAttribute' => ['products_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\User::className(), 'targetAttribute' => ['user_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'date' => Yii::t('models', 'Date'),
            'qautity' => Yii::t('models', 'Qautity'),
            'price' => Yii::t('models', 'Price'),
            'profit_price' => Yii::t('models', 'Profit Price'),
            'products_id' => Yii::t('models', 'Products ID'),
            'user_id' => Yii::t('models', 'User ID'),
            'invoice_id' => Yii::t('models', 'Invoice ID'),
            'branch_id' => Yii::t('models', 'Branch ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBranch()
    {
        return $this->hasOne(\app\models\Branch::className(), ['id' => 'branch_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInvoice()
    {
        return $this->hasOne(\app\models\Invoice::className(), ['id' => 'invoice_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProducts()
    {
        return $this->hasOne(\app\models\Products::className(), ['id' => 'products_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSaleHasPurchases()
    {
        return $this->hasMany(\app\models\SaleHasPurchase::className(), ['sale_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPurchaseItems()
    {
        return $this->hasMany(\app\models\PurchaseItem::className(), ['id' => 'purchase_item_id'])->viaTable('sale_has_purchase', ['sale_id' => 'id']);
    }




}
