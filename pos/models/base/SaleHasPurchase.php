<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "sale_has_purchase".
 *
 * @property integer $sale_id
 * @property integer $purchase_item_id
 * @property integer $qautity
 * @property string $pricebuy
 *
 * @property \app\models\PurchaseItem $purchaseItem
 * @property \app\models\Sale $sale
 * @property string $aliasModel
 */
abstract class SaleHasPurchase extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'sale_has_purchase';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['sale_id', 'purchase_item_id', 'qautity', 'pricebuy'], 'required'],
            [['sale_id', 'purchase_item_id', 'qautity'], 'integer'],
            [['pricebuy'], 'string', 'max' => 255],
            [['sale_id', 'purchase_item_id'], 'unique', 'targetAttribute' => ['sale_id', 'purchase_item_id']],
            [['purchase_item_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PurchaseItem::className(), 'targetAttribute' => ['purchase_item_id' => 'id']],
            [['sale_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Sale::className(), 'targetAttribute' => ['sale_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'sale_id' => Yii::t('models', 'Sale ID'),
            'purchase_item_id' => Yii::t('models', 'Purchase Item ID'),
            'qautity' => Yii::t('models', 'Qautity'),
            'pricebuy' => Yii::t('models', 'Pricebuy'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPurchaseItem()
    {
        return $this->hasOne(\app\models\PurchaseItem::className(), ['id' => 'purchase_item_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSale()
    {
        return $this->hasOne(\app\models\Sale::className(), ['id' => 'sale_id']);
    }




}
