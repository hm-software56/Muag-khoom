<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "purchase".
 *
 * @property integer $id
 * @property string $detail
 * @property string $date
 * @property integer $currency_id
 * @property string $status
 *
 * @property \app\models\Currency $currency
 * @property \app\models\PurchaseItem[] $purchaseItems
 * @property string $aliasModel
 */
abstract class Purchase extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const STATUS_SAVE = 'save';
    const STATUS_CONFIRM = 'confirm';
    const STATUS_CANCLE = 'cancle';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'purchase';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['detail', 'status'], 'string'],
            [['date', 'currency_id'], 'required'],
            [['date'], 'safe'],
            [['currency_id'], 'integer'],
            [['currency_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Currency::className(), 'targetAttribute' => ['currency_id' => 'id']],
            ['status', 'in', 'range' => [
                    self::STATUS_SAVE,
                    self::STATUS_CONFIRM,
                    self::STATUS_CANCLE,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'detail' => Yii::t('models', 'Detail'),
            'date' => Yii::t('models', 'Date'),
            'currency_id' => Yii::t('models', 'Currency ID'),
            'status' => Yii::t('models', 'Status'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCurrency()
    {
        return $this->hasOne(\app\models\Currency::className(), ['id' => 'currency_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPurchaseItems()
    {
        return $this->hasMany(\app\models\PurchaseItem::className(), ['purchase_id' => 'id']);
    }




    /**
     * get column status enum value label
     * @param string $value
     * @return string
     */
    public static function getStatusValueLabel($value){
        $labels = self::optsStatus();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column status ENUM value labels
     * @return array
     */
    public static function optsStatus()
    {
        return [
            self::STATUS_SAVE => Yii::t('models', self::STATUS_SAVE),
            self::STATUS_CONFIRM => Yii::t('models', self::STATUS_CONFIRM),
            self::STATUS_CANCLE => Yii::t('models', self::STATUS_CANCLE),
        ];
    }

}
