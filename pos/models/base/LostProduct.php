<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "lost_product".
 *
 * @property integer $id
 * @property integer $qautity
 * @property string $date
 * @property string $pricebuy
 * @property integer $purchase_item_id
 * @property integer $branch_id
 *
 * @property \app\models\Branch $branch
 * @property \app\models\PurchaseItem $purchaseItem
 * @property string $aliasModel
 */
abstract class LostProduct extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'lost_product';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['qautity', 'date', 'pricebuy', 'purchase_item_id'], 'required'],
            [['qautity', 'purchase_item_id', 'branch_id'], 'integer'],
            [['date'], 'safe'],
            [['pricebuy'], 'string', 'max' => 255],
            [['branch_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Branch::className(), 'targetAttribute' => ['branch_id' => 'id']],
            [['purchase_item_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PurchaseItem::className(), 'targetAttribute' => ['purchase_item_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'qautity' => Yii::t('models', 'Qautity'),
            'date' => Yii::t('models', 'Date'),
            'pricebuy' => Yii::t('models', 'Pricebuy'),
            'purchase_item_id' => Yii::t('models', 'Purchase Item ID'),
            'branch_id' => Yii::t('models', 'Branch ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBranch()
    {
        return $this->hasOne(\app\models\Branch::className(), ['id' => 'branch_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPurchaseItem()
    {
        return $this->hasOne(\app\models\PurchaseItem::className(), ['id' => 'purchase_item_id']);
    }




}
